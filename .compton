# Dylan's Compton config

# Use glx backend
backend = "glx"

# Enabled client-side shadows on windows.
shadow = true;

# Don't draw shadows on DND windows.
no-dnd-shadow = true;

# Avoid drawing shadows on dock/panel windows.
no-dock-shadow = false;

# Zero the part of the shadow's mask behind the window. Fix some weirdness with ARGB windows.
clear-shadow = true;

# The blur radius for shadows. (default 12)
shadow-radius = 4;

# The left offset for shadows. (default -15)
shadow-offset-x = -6;

# The top offset for shadows. (default -15)
shadow-offset-y = -6;

# The translucency for shadows. (default .75)
shadow-opacity = 0.2;

# Set if you want different colour shadows
shadow-red = 0.03;
shadow-green = 0.03;
shadow-blue = 0.04;

# The shadow exclude options are helpful if you have shadows enabled. Due to the way compton draws its shadows, certain applications will have visual glitches
# (most applications are fine, only apps that do weird things with xshapes or argb are affected).
# This list includes all the affected apps I found in my testing. The "! name~=''" part excludes shadows on any "Unknown" windows, this prevents a visual glitch with the XFWM alt tab switcher.
shadow-exclude = [
	"name ?= 'bar2'",
	"name ?= 'bar3'"
];

# Avoid drawing shadow on all shaped windows (see also: --detect-rounded-corners)
shadow-ignore-shaped = false;

# Set vsync methof
vsync = "opengl-swc";

# Painting on X Composite overlay window. Recommended.
paint-on-overlay = true;

# Limit compton to repaint at most once every 1 / refresh_rate second to boost performance.
# This should not be used with --vsync drm/opengl/opengl-oml as they essentially does --sw-opti's job already,
# unless you wish to specify a lower refresh rate than the actual value.
sw-opti = true;

# Unredirect all windows if a full-screen opaque window is detected, to maximize performance for full-screen windows, like games.
# Known to cause flickering when redirecting/unredirecting windows.
# paint-on-overlay may make the flickering less obvious.
unredir-if-possible = true;

# Use WM_TRANSIENT_FOR to group windows, and consider windows in the same group focused at the same time.
detect-transient = true;

# Use WM_CLIENT_LEADER to group windows, and consider windows in the same group focused at the same time.
# WM_TRANSIENT_FOR has higher priority if --detect-transient is enabled, too.
detect-client-leader = true;
